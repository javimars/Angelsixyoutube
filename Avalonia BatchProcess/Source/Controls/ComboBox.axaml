<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="using:System"
                    x:ClassModifier="internal">
  <Design.PreviewWith>
    <Border Padding="20" Background="{DynamicResource PrimaryBackground}">
      <StackPanel Spacing="10">
        <ComboBox PlaceholderText="Select an item">
          <ComboBoxItem>Item 1</ComboBoxItem>
          <ComboBoxItem>Item 2</ComboBoxItem>
        </ComboBox>
        <ComboBox IsEnabled="False"
                  Width="200"
                  SelectedIndex="1"
                  HorizontalContentAlignment="Center">
          <ComboBoxItem>Item 1</ComboBoxItem>
          <ComboBoxItem>Item 2</ComboBoxItem>
        </ComboBox>
        <ComboBox PlaceholderText="Error">
          <DataValidationErrors.Error>
            <sys:Exception>
              <x:Arguments>
                <x:String>Error</x:String>
              </x:Arguments>
            </sys:Exception>
          </DataValidationErrors.Error>
        </ComboBox>
      </StackPanel>
    </Border>
  </Design.PreviewWith>

  <Thickness x:Key="ComboBoxTopHeaderMargin">0,0,0,4</Thickness>
  <x:Int32 x:Key="ComboBoxPopupMaxNumberOfItems">15</x:Int32>
  <x:Int32 x:Key="ComboBoxPopupMaxNumberOfItemsThatCanBeShownOnOneSide">7</x:Int32>

  <Thickness x:Key="ComboBoxPadding">12,5,0,7</Thickness>
  <Thickness x:Key="ComboBoxEditableTextPadding">11,5,32,6</Thickness>
  <x:Double x:Key="ComboBoxMinHeight">32</x:Double>

  <ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">
    <Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="MaxDropDownHeight" Value="504" />
    <Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
    <Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="MinHeight" Value="{DynamicResource ComboBoxMinHeight}" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}" />
    <Setter Property="Template">
      <ControlTemplate>
        <DataValidationErrors>
          <Grid ColumnDefinitions="*,32">
            <Border x:Name="Background"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />

            <TextBlock x:Name="PlaceholderTextBlock"
                       Grid.Column="0"
                       Padding="15 0 0 0"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       Margin="{TemplateBinding Padding}"
                       Text="{TemplateBinding PlaceholderText}"
                       Foreground="{TemplateBinding PlaceholderForeground}"
                       IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
            <ContentControl x:Name="ContentPresenter"
                            Content="{TemplateBinding SelectionBoxItem}"
                            Grid.Column="0"
                            Padding="15 0 0 0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
            </ContentControl>

            <Border x:Name="DropDownOverlay"
                    Grid.Column="1"
                    Background="Transparent"
                    Margin="0,1,1,1"
                    Width="30"
                    IsVisible="False"
                    HorizontalAlignment="Right" />

            <Label Classes="icon" x:Name="DropDownGlyph"
                      Grid.Column="1"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Content="&#xe136;"
                      Foreground="{TemplateBinding BorderBrush}" />

            <Popup Name="PART_Popup"
                   WindowManagerAddShadowHint="False"
                   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                   MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                   PlacementTarget="Background"
                   IsLightDismissEnabled="True"
                   InheritsTransform="True">
              <Border x:Name="PopupBorder"
                      Background="{DynamicResource PrimaryBackgroundGradient}"
                      BorderBrush="{DynamicResource PrimaryForeground}"
                      BorderThickness="3"
                      Padding="{DynamicResource ComboBoxDropdownBorderPadding}"
                      HorizontalAlignment="Stretch"
                      CornerRadius="{DynamicResource OverlayCornerRadius}">
                <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                              IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}">
                  <ItemsPresenter Name="PART_ItemsPresenter"
                                  Margin="{DynamicResource ComboBoxDropdownContentMargin}"
                                  ItemsPanel="{TemplateBinding ItemsPanel}" />
                </ScrollViewer>
              </Border>
            </Popup>
          </Grid>
        </DataValidationErrors>
      </ControlTemplate>
    </Setter>
    
    <!-- Add Styles Here -->
    <Style Selector="^">
      <Setter Property="Margin" Value="0 10"></Setter>
      <Setter Property="Padding" Value="0 10"></Setter>
      <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBackgroundGradient}"></Setter>
      <Setter Property="BorderThickness" Value="3"></Setter>
      <Setter Property="PlaceholderForeground" Value="{DynamicResource PrimaryForeground}"></Setter>
      <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
      <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    </Style>

    <!--  PointerOver State  -->
    <Style Selector="^:pointerover">
      <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}" />
      <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonHoverGradient}" />
    </Style>

    <!--  Pressed State  -->
    <Style Selector="^:pressed">
      <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
    </Style>

    <!-- Error State -->
    <Style Selector="^:error">
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
    </Style>

    <!--  Focus Pressed State  -->
    <Style Selector="^:focus">
        <Setter Property="BorderBrush" Value="{DynamicResource AlertButtonBackgroundGradient}" />
    </Style>

    <!--  Disabled State  -->
    <Style Selector="^:disabled">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHoverBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverBackground}" />
        <Setter Property="PlaceholderForeground" Value="{DynamicResource PrimaryHoverBackground}" />
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>
  </ControlTheme>

</ResourceDictionary>
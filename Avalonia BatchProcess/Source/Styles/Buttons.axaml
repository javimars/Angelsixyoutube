<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
            <!-- Add Controls for Previewer Here -->
            <Border Padding="20" Background="{DynamicResource PrimaryBackgroundGradient}" Width="600">
                <Grid ColumnDefinitions="*,*">
                    <StackPanel Spacing="15">
                        <Button Content="Home" />
                        <Button Classes="small" Content="Small" />
                        <Button Classes="subtle" Content="Home" />
                        <IconButton IconText="&#xe2c2;" Classes="subtle" Content="Home" />
                        <IconButton IconText="&#xe2c2;" Classes="outline" Content="Home" />
                        <Button Classes="outline" Content="Home" />
                        <Button Classes="alert" Content="Home" />
                
                        <IconButton IconText="&#xe2c2;" Content="Home" HorizontalAlignment="Stretch" />

                        <Button Grid.Row="1">
                            <Label Classes="icon-only" Content="&#xe272;"></Label>
                        </Button>
                
                        <Button Classes="transparent" Grid.Row="1">
                            <Label Classes="icon-only" Content="&#xe272;"></Label>
                        </Button>
                    </StackPanel>
                
                    <StackPanel Grid.Column="1" Spacing="15">
                        <CheckBox></CheckBox>
                        <CheckBox>Has Content</CheckBox>
                    </StackPanel>
                </Grid>
            </Border>
    </Design.PreviewWith>

    <!-- Add Styles Here -->
    
    <!-- Button Styles -->
    <Style Selector=":is(Button)">
        <Setter Property="FontSize" Value="17"></Setter>
        <Setter Property="CornerRadius" Value="10"></Setter>
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="Padding" Value="9 5.5 9.2 5.5"></Setter>
        <Setter Property="BorderThickness" Value="3"></Setter>
    </Style>
    
    <!-- Small button -->
    <Style Selector=":is(Button).small">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="CornerRadius" Value="6"></Setter>
        <Setter Property="Padding" Value="6 2 6 2"></Setter>
    </Style>
    
    <!-- Normal button -->
    <Style Selector=":is(Button):not(CheckBox)">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundGradient}"></Setter>
    </Style>
    
    <!-- Normal button (hover) -->
    <Style Selector=":is(Button):not(CheckBox):pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
    </Style>
    <Style Selector=":is(Button):not(CheckBox):pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
    </Style>
    
    <!-- Normal button (hover) -->
    <Style Selector=":is(Button):not(CheckBox):pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
    </Style>

    <!-- Alert button -->
    <Style Selector=":is(Button).alert">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource AlertButtonBackgroundGradient}"></Setter>
    </Style>
    
    <!-- Alert button (hover) -->
    <Style Selector=":is(Button).alert:pointerover /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource AlertButtonHoverBackground}"></Setter>
    </Style>
    <Style Selector=":is(Button).alert:pointerover">
        <Setter Property="Background" Value="{DynamicResource AlertButtonHoverBackground}"></Setter>
    </Style>

    <!-- Subtle button -->
    <Style Selector=":is(Button).subtle">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
    </Style>
        
    <!-- Subtle button (hover) -->
    <Style Selector=":is(Button).subtle:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}"></Setter>
    </Style>
    <Style Selector=":is(Button).subtle:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHoverForeground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryHoverBackground}"></Setter>
    </Style>
    
    <!-- Outline button -->
    <Style Selector=":is(Button).outline">
        <Setter Property="Foreground" Value="{DynamicResource OutlineButtonForeground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonBackgroundGradient}"></Setter>
    </Style>
    
    <!-- Outline button (hover) -->
    <Style Selector=":is(Button).outline:pointerover /template/ ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
    </Style>  
    <Style Selector=":is(Button).outline:pointerover">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBackground}"></Setter>
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryButtonHoverGradient}"></Setter>
    </Style>
        
    <!-- Transparent button (hover) -->
    <Style Selector=":is(Button).transparent:pointerover /template/ ContentPresenter">
        <Setter Property="RenderTransform" Value="scale(1.2)"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>        
    <Style Selector=":is(Button).transparent:pointerover">
        <Setter Property="RenderTransform" Value="scale(1.2)"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>
    
    <!-- Transparent button animation -->
    <Style Selector=":is(Button) /template/ ContentPresenter">
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Foreground" Duration="0:0:0.1" />
                <BrushTransition Property="Background" Duration="0:0:0.1" />
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
            </Transitions>
        </Setter>
    </Style>
    <Style Selector=":is(Button)">
        <Setter Property="Transitions">
            <Transitions>
                <BrushTransition Property="Foreground" Duration="0:0:0.1" />
                <BrushTransition Property="Background" Duration="0:0:0.1" />
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.1" />
            </Transitions>
        </Setter>
    </Style>
    
    <!-- Transparent button -->
    <Style Selector=":is(Button).transparent">
        <Setter Property="Background" Value="Transparent"></Setter>
    </Style>
   
    <!-- Transparent button icon only label -->
    <Style Selector=":is(Button).transparent Label.icon-only">
        <Setter Property="FontFamily" Value="{DynamicResource Phosphor}"></Setter>
    </Style>
    
    <!-- Active button -->
    <Style Selector=":is(Button).active /template/ ContentPresenter">
        <Setter Property="Background" Value="{DynamicResource PrimaryActiveBackground}"></Setter>
    </Style>
    <Style Selector=":is(Button).active">
        <Setter Property="Background" Value="{DynamicResource PrimaryActiveBackground}"></Setter>
    </Style>
    
</Styles>
